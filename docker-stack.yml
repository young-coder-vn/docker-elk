version: '3.3'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    ports:
      - "9200:9200"
      - "9300:9300"
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      # Force publishing on the 'elk' overlay.
      network.publish_host: _eth0_
    networks:
      - elk
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '4'
          memory: 2048M
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.elk-elasticsearch-http.rule=Host(`elasticsearch.${DOMAIN?Variable not set}`)
        - traefik.http.routers.elk-elasticsearch-http.entrypoints=http
        - traefik.http.routers.elk-elasticsearch-http.middlewares=https-redirect
        - traefik.http.routers.elk-elasticsearch-https.rule=Host(`elasticsearch.${DOMAIN?Variable not set}`)
        - traefik.http.routers.elk-elasticsearch-https.entrypoints=https
        - traefik.http.routers.elk-elasticsearch-https.tls=true
        - traefik.http.routers.elk-elasticsearch-https.tls.certresolver=le
        - traefik.http.services.elk-elasticsearch.loadbalancer.server.port=9200

  logstash:
    image: docker.elastic.co/logstash/logstash:7.15.0
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
      - "5544:5544/udp"
      - "12201:12201/udp"
    configs:
      - source: logstash_config
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash_pipeline
        target: /usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 1024M
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.elk-logstash-http.rule=Host(`logstash.${DOMAIN?Variable not set}`)
        - traefik.http.routers.elk-logstash-http.entrypoints=http
        - traefik.http.routers.elk-logstash-http.middlewares=https-redirect
        - traefik.http.routers.elk-logstash-https.rule=Host(`logstash.${DOMAIN?Variable not set}`)
        - traefik.http.routers.elk-logstash-https.entrypoints=https
        - traefik.http.routers.elk-logstash-https.tls=true
        - traefik.http.routers.elk-logstash-https.tls.certresolver=le
        - traefik.http.services.elk-logstash.loadbalancer.server.port=9600

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    ports:
      - "5601:5601"
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    networks:
      - elk
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 1024M
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.elk-kibana-http.rule=Host(`kibana.${DOMAIN?Variable not set}`)
        - traefik.http.routers.elk-kibana-http.entrypoints=http
        - traefik.http.routers.elk-kibana-http.middlewares=https-redirect
        - traefik.http.routers.elk-kibana-https.rule=Host(`kibana.${DOMAIN?Variable not set}`)
        - traefik.http.routers.elk-kibana-https.entrypoints=https
        - traefik.http.routers.elk-kibana-https.tls=true
        - traefik.http.routers.elk-kibana-https.tls.certresolver=le
        - traefik.http.services.elk-kibana.loadbalancer.server.port=5601
      

configs:

  elastic_config:
    file: ./elasticsearch/config/elasticsearch.yml
  logstash_config:
    file: ./logstash/config/logstash.yml
  logstash_pipeline:
    file: ./logstash/pipeline/logstash.conf
  kibana_config:
    file: ./kibana/config/kibana.yml

networks:
  elk:
    # driver: overla
  traefik-public:
    external: true
